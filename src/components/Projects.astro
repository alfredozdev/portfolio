---
import GitHubIcon from "../../public/icons/GitHub.astro"
import CodeIcon from "../../public/icons/Code.astro"
import React from "../../public/icons/React.astro"
import JavaScript from "../../public/icons/JavaScript.astro"
import TypeScript from "../../public/icons/TypeScript.astro"
import CSS from "../../public/icons/CSS.astro"
import Vite from "../../public/icons/Vite.astro"
import Vercel from "../../public/icons/Vercel.astro"
import TailWind from "../../public/icons/Tailwind.astro"
import AstroIcon from "../../public/icons/AstroIcon.astro"

const tags = {
    React: { name: 'React', icon: React, class: 'bg-[#006577] text-white' },
    JavaScript: { name: 'JavaScript', icon: JavaScript, class: 'bg-[#696022] text-white' },
    TypeScript: { name: 'TypeScript', icon: TypeScript, class: 'bg-[#16375b] text-white' },
    CSS: { name: 'CSS', icon: CSS, class: 'bg-[#0f1f5d] text-white' },
    Tailwind : { name: 'Tailwind', icon: TailWind, class: 'bg-[#195671] text-white' },
    Vite: { name: 'Vite', icon: Vite, class: 'bg-[#5d197d] text-white' },
    Vercel: { name: 'Vercel', icon: Vercel, class: 'bg-black text-white' },
    Astro: { name: 'Astro', icon: AstroIcon, class: 'bg-[#af3f00] text-white' }
}

const projects = [
    {
        title: 'Contador de Calorias',
        description: 'Tercer proyecto que desarrollo en mi camino de aprender React, en esta aplicación aprendí a usar useReducer y todo lo que implica. Se implemento también la parte de localStorage para no perder la información al recargar la pagina.',
        link: 'https://caloriecounter-bice.vercel.app/',
        github: 'https://github.com/alfredozdev/caloriecounter',
        image: '/projects/screencount.webp',
        tags: [tags.React, tags.TypeScript, tags.Tailwind, tags.Vite, tags.Vercel],
        class: ''
    },
    {
        title: 'Carrito de Compras JS',
        description: 'Es mi primer aplicación web desarrollada mientras aprendo React. Aquí aprendí a usar los Hooks useState y useEffect, aprendí a crear mis propios Hooks y también a usar localStorage para conservar los elementos del carrito aun cuando se recarga la pagina.',
        link: 'https://carritocompras-iota.vercel.app/',
        github: 'https://github.com/alfredozdev/carritocompras',
        image: '/projects/screenshop.webp',
        tags: [tags.React, tags.JavaScript, tags.CSS, tags.Vite, tags.Vercel],
        class: 'mt-10'
    },
    {
        title: 'Calculadora de Propinas',
        description: 'Esta fue mi segunda aplicación mientras sigo aprendiendo React. Acá aprendí las diferencias entre useMemo y useCallback, ademas fue mi primera vez usando Tailwind.',
        link: 'https://calculadorapropinas.vercel.app/',
        github: 'https://github.com/alfredozdev/calculadorapropinas',
        image: '/projects/screentips.webp',
        tags: [tags.React, tags.TypeScript, tags.Tailwind, tags.Vite, tags.Vercel],
        class: 'mt-10'
    },
    {
        title: 'Carrito de Compras TS',
        description: 'Este proyecto tiene el mismo funcionamiento que el anterior carrito, sin embargo, este fue migrado en su totalidad a TypeScript.',
        link: 'https://carritocompras-ts.vercel.app/',
        github: 'https://github.com/alfredozdev/carritocompras_ts',
        image: '/projects/screenshop.webp',
        tags: [tags.React, tags.TypeScript, tags.CSS, tags.Vite, tags.Vercel],
        class: 'mt-10'
    }
]
---

<h2 class="text-3xl font-semibold mb-6 flex gap-x-4 items-center">
    <CodeIcon class="size-7"/>
    Proyectos
<h2/>
<div>
    {
        projects.map(project => (
        <article class={`lg:flex ${project.class}`}>
            <div class="pb-5 md:pb-5 lg:pr-10">
                <a href={project.github}>
                    <h3 class="flex flex-wrap gap-x-2 items-center mb-2 text-xl font-semibold text-yellow-200/90 mt-2"> 
                        {project.title} <GitHubIcon class="size-3 md:size-4"/>
                    </h3>
                </a>
                <p class="mb-3 text-base font-normal text-white">
                    {project.description}
                </p>
                <ul class="flex gap-3 flex-wrap">
                    {project.tags.map(tag => (
                        <li>
                            <span class={
                                    `flex gap-x-2
                                    border border-white/15 rounded-full
                                    text-xs ${tag.class}
                                    py-1 px-2
                                    transition
                                    hover:bg-white/10`}>
                                <tag.icon class="size-4" />
                                {tag.name}
                            </span>
                        </li>
                    ))}
                </ul>
            </div>
            <a href={project.link}>
                <img
                    class="rounded max-w-xs transition hover:scale-105"
                    src={project.image}
                    alt={`Captura de pantalla del proyecto ${project.image}`}
                />
            </a>
        </article>
        ))
    }
</div>
